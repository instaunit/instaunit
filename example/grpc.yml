protos:
  - grpc/service.binpb

tests:
  - # test an endpoint that has no explicit request or response
    grpc:
      service: grpcservice.UserService
      method: Noop

  -
    id: user1

    grpc:
      service: grpcservice.UserService
      method: CreateUser

    request:
      format: application/json
      entity: |
        {
          "user": {
            "name": "John Doe",
            "email": "john@example.com",
            "age": 30,
            "is_active": true,
            "tags": [
              "developer",
              "golang"
            ],
            "metadata": {
              "department": "Engineering",
              "level": "Senior"
            },
            "address": {
              "street": "123 Main St",
              "city": "San Francisco",
              "state": "CA",
              "zip_code": "94102",
              "country": "USA"
            },
            "type": "USER_TYPE_REGULAR",
            "phone": "+1-917-555-0123"
          }
        }

    response:
      entity: |
        {
          "user": {
            "name": "John Doe",
            "email": "john@example.com",
            "age": 30,
            "is_active": true,
            "tags": [
              "developer",
              "golang"
            ],
            "metadata": {
              "department": "Engineering",
              "level": "Senior"
            },
            "address": {
              "street": "123 Main St",
              "city": "San Francisco",
              "state": "CA",
              "zip_code": "94102",
              "country": "USA"
            },
            "type": "USER_TYPE_REGULAR",
            "phone": "+1-917-555-0123"
          }
        }

  -
    grpc:
      service: grpcservice.UserService
      method: GetUser

    request:
      url: grpc://localhost:8800
      entity: |
        {
          "user_id": ${user1.response.value.user.id}
        }

    response:
      entity: |
        {
          "user": {
            "name": "John Doe",
            "email": "john@example.com",
            "age": 30,
            "is_active": true,
            "tags": [
              "developer",
              "golang"
            ],
            "metadata": {
              "department": "Engineering",
              "level": "Senior"
            },
            "address": {
              "street": "123 Main St",
              "city": "San Francisco",
              "state": "CA",
              "zip_code": "94102",
              "country": "USA"
            },
            "type": "USER_TYPE_REGULAR",
            "phone": "+1-917-555-0123"
          }
        }

  -
    grpc:
      service: grpcservice.UserService
      method: GetUser

    request:
      url: grpc://localhost:8800
      entity: |
        {
          "user_id": ${user1.response.value.user.id}
        }

    response:
      entity: |
        {
          "user": {
            "name": "This Test Intentionally Fails",
            "email": "john@example.com",
            "age": 30,
            "is_active": true,
            "tags": [
              "developer",
              "golang"
            ],
            "metadata": {
              "department": "Engineering",
              "level": "Senior"
            },
            "address": {
              "street": "123 Main St",
              "city": "San Francisco",
              "state": "CA",
              "zip_code": "94102",
              "country": "USA"
            },
            "type": "USER_TYPE_REGULAR",
            "phone": "+1-917-555-0123"
          }
        }

  -
    id: user2

    grpc:
      service: grpcservice.UserService
      method: CreateUser

    request:
      format: application/protobuf
      entity: |
        CqABEghKb2huIERvZRoQam9obkBleGFtcGxlLmNvbSAeKAEyCWRldmVsb3BlcjIGZ29sYW5nOhkKCmRlcGFydG1lbnQSC0VuZ2luZWVyaW5nOg8KBWxldmVsEgZTZW5pb3JCLAoLMTIzIE1haW4gU3QSDVNhbiBGcmFuY2lzY28aAkNBIgU5NDEwMioDVVNBSAJSDysxLTkxNy01NTUtMDEyMw==

    response:
      format: application/json
      entity: |
        {
          "user": {
            "name": "John Doe",
            "email": "john@example.com",
            "age": 30,
            "is_active": true,
            "tags": [
              "developer",
              "golang"
            ],
            "metadata": {
              "department": "Engineering",
              "level": "Senior"
            },
            "address": {
              "street": "123 Main St",
              "city": "San Francisco",
              "state": "CA",
              "zip_code": "94102",
              "country": "USA"
            },
            "type": "USER_TYPE_REGULAR",
            "phone": "+1-917-555-0123"
          }
        }

  -
    grpc:
      service: grpcservice.UserService
      method: ListUserTypes

    response:
      format: application/protobuf
      entity: |
        CgQAAQID

  -
    grpc:
      service: grpcservice.UserService
      method: This_Method_Intentionally_Doesnt_Exist

    request:
      url: grpc://localhost:8800

    response:
      status: 5
